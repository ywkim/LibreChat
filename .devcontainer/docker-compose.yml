version: '3.4'

services:
  app:
    # container_name: LibreChat_dev
    image: node:19-bullseye
    # Using a Dockerfile is optional, but included for completeness.
    # build: 
    #   context: .
    #   dockerfile: Dockerfile
    #   # [Optional] You can use build args to set options. e.g. 'VARIANT' below affects the image in the Dockerfile
    #   args: 
    #     VARIANT: buster
    # network_mode: "host"
    links:
      - mongodb
      - meilisearch
    # ports:
    #   - 3080:3080               # Change it to 9000:3080 to use nginx
    extra_hosts: # if you are running APIs on docker you need access to, you will need to uncomment this line and next
    - "host.docker.internal:host-gateway"

    volumes:
    #   # This is where VS Code should expect to find your project's source code and the value of "workspaceFolder" in .devcontainer/devcontainer.json
      - ..:/workspace:cached
    #   # - /app/client/node_modules
    #   # - ./api:/app/api
    #   # - ./.env:/app/.env
    #   # - ./.env.development:/app/.env.development
    #   # - ./.env.production:/app/.env.production
    #   # - /app/api/node_modules

    #   # Uncomment the next line to use Docker from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker-compose for details.
    #   # - /var/run/docker.sock:/var/run/docker.sock 

    # Runs app on the same network as the service container, allows "forwardPorts" in devcontainer.json function.
    # network_mode: service:another-service
    
    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally. 
    # (Adding the "ports" property to this file will not forward from a Codespace.)

    # Uncomment the next line to use a non-root user for all processes - See https://aka.ms/vscode-remote/containers/non-root for details.
    # user: vscode

    # Uncomment the next four lines if you will use a ptrace-based debugger like C++, Go, and Rust.
    # cap_add:
    #   - SYS_PTRACE
    # security_opt:
    #   - seccomp:unconfined

    # Overrides default command so things don't shut down after the process ends.
    command: /bin/sh -c "while sleep 1000; do :; done"  

  mongodb:
    container_name: chat-mongodb
    # network_mode: "host"
    expose:
      - 27017
    # ports:
    #   - 27018:27017
    image: mongo
  #   restart: always
    volumes:
      - ./data-node:/data/db
    command: mongod --noauth
  meilisearch:
    container_name: chat-meilisearch
    image: getmeili/meilisearch:v1.0
    # network_mode: "host"
    expose:
      - 7700
    # ports:
    #   - 7700:7700
    # env_file:
    #   - .env
    environment:
      - SEARCH=false
      - MEILI_HOST=http://0.0.0.0:7700
      - MEILI_HTTP_ADDR=0.0.0.0:7700
      - MEILI_MASTER_KEY=5c71cf56d672d009e36070b5bc5e47b743535ae55c818ae3b735bb6ebfb4ba63
    volumes:
      - ./meili_data:/meili_data
  
